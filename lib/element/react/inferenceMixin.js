'use strict';

function spliceChildren(start, removeCount, addedChildren) {
  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.context;

  var firstChild = first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.spliceChildren(start, removeCount, addedChildren, childContext);
}

function addChild(child) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;

  var firstChild = first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.addChild(child, childContext);
}

function removeChild(child) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;

  var firstChild = first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.removeChild(child, childContext);
}

function setAttribute(name, value) {
  var firstChild = first(this.children);

  return firstChild.setAttribute(name, value);
}

function getAttribute(name) {
  var firstChild = first(this.children);

  return firstChild.getAttribute(name);
}

function clearAttribute(name) {
  var firstChild = first(this.children);

  firstChild.clearAttribute(name);
}

function addAttribute(name, value) {
  var firstChild = first(this.children);

  firstChild.setClassaddAttribute(name, value);
}

function removeAttribute(name) {
  var firstChild = first(this.children);

  firstChild.removeAttribute(name);
}

function setClass(className) {
  var firstChild = first(this.children);

  firstChild.setClass(className);
}

function addClass(className) {
  var firstChild = first(this.children);

  firstChild.addClass(className);
}

function removeClass(className) {
  var firstChild = first(this.children);

  firstChild.removeClass(className);
}

function toggleClass(className) {
  var firstChild = first(this.children);

  firstChild.toggleClass(className);
}

function hasClass(className) {
  var firstChild = first(this.children);

  return firstChild.hasClass(className);
}

function clearClasses() {
  var firstChild = first(this.children);

  firstChild.clearClasses();
}

function getTagName() {
  return null;
}

var inferenceMixin = {
  spliceChildren: spliceChildren,
  addChild: addChild,
  removeChild: removeChild,
  setAttribute: setAttribute,
  getAttribute: getAttribute,
  clearAttribute: clearAttribute,
  addAttribute: addAttribute,
  removeAttribute: removeAttribute,
  setClass: setClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  hasClass: hasClass,
  clearClasses: clearClasses,
  getTagName: getTagName
};

module.exports = inferenceMixin;

function first(array) {
  return array[0];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9lbGVtZW50L3JlYWN0L2luZmVyZW5jZU1peGluLmpzIl0sIm5hbWVzIjpbInNwbGljZUNoaWxkcmVuIiwic3RhcnQiLCJyZW1vdmVDb3VudCIsImFkZGVkQ2hpbGRyZW4iLCJjb250ZXh0IiwiZmlyc3RDaGlsZCIsImZpcnN0IiwiY2hpbGRyZW4iLCJjaGlsZENvbnRleHQiLCJnZXRDaGlsZENvbnRleHQiLCJhZGRDaGlsZCIsImNoaWxkIiwicmVtb3ZlQ2hpbGQiLCJzZXRBdHRyaWJ1dGUiLCJuYW1lIiwidmFsdWUiLCJnZXRBdHRyaWJ1dGUiLCJjbGVhckF0dHJpYnV0ZSIsImFkZEF0dHJpYnV0ZSIsInNldENsYXNzYWRkQXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0Q2xhc3MiLCJjbGFzc05hbWUiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJoYXNDbGFzcyIsImNsZWFyQ2xhc3NlcyIsImdldFRhZ05hbWUiLCJpbmZlcmVuY2VNaXhpbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcnJheSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsY0FBVCxDQUF3QkMsS0FBeEIsRUFBK0JDLFdBQS9CLEVBQTRDQyxhQUE1QyxFQUFtRjtBQUFBLE1BQXhCQyxPQUF3Qix1RUFBZCxLQUFLQSxPQUFTOztBQUNqRixNQUFNQyxhQUFhQyxNQUFNLEtBQUtDLFFBQVgsQ0FBbkI7QUFBQSxNQUNNQyxlQUFlLEtBQUtDLGVBQUwsQ0FBcUJMLE9BQXJCLEtBQWlDQSxPQUR0RDs7QUFHQUMsYUFBV0wsY0FBWCxDQUEwQkMsS0FBMUIsRUFBaUNDLFdBQWpDLEVBQThDQyxhQUE5QyxFQUE2REssWUFBN0Q7QUFDRDs7QUFFRCxTQUFTRSxRQUFULENBQWtCQyxLQUFsQixFQUFpRDtBQUFBLE1BQXhCUCxPQUF3Qix1RUFBZCxLQUFLQSxPQUFTOztBQUMvQyxNQUFNQyxhQUFhQyxNQUFNLEtBQUtDLFFBQVgsQ0FB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T3JCQyxnQkFBY0EsWUFQTztBQVFyQkUsbUJBQWlCQSxlQVJJO0FBU3JCQyxZQUFVQSxRQVRXO0FBVXJCRSxZQUFVQSxRQVZXO0FBV3JCQyxlQUFhQSxXQVhRO0FBWXJCQyxlQUFhQSxXQVpRO0FBYXJCQyxZQUFVQSxRQWJXO0FBY3JCQyxnQkFBY0EsWUFkTztBQWVyQkMsY0FBWUE7QUFmUyxDQUF2Qjs7QUFrQkFFLE9BQU9DLE9BQVAsR0FBaUJGLGNBQWpCOztBQUVBLFNBQVN2QixLQUFULENBQWUwQixLQUFmLEVBQXNCO0FBQUUsU0FBT0EsTUFBTSxDQUFOLENBQVA7QUFBa0IiLCJmaWxlIjoiaW5mZXJlbmNlTWl4aW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIHNwbGljZUNoaWxkcmVuKHN0YXJ0LCByZW1vdmVDb3VudCwgYWRkZWRDaGlsZHJlbiwgY29udGV4dCA9IHRoaXMuY29udGV4dCkge1xuICBjb25zdCBmaXJzdENoaWxkID0gZmlyc3QodGhpcy5jaGlsZHJlbiksXG4gICAgICAgIGNoaWxkQ29udGV4dCA9IHRoaXMuZ2V0Q2hpbGRDb250ZXh0KGNvbnRleHQpIHx8IGNvbnRleHQ7XG5cbiAgZmlyc3RDaGlsZC5zcGxpY2VDaGlsZHJlbihzdGFydCwgcmVtb3ZlQ291bnQsIGFkZGVkQ2hpbGRyZW4sIGNoaWxkQ29udGV4dCk7XG59XG5cbmZ1bmN0aW9uIGFkZENoaWxkKGNoaWxkLCBjb250ZXh0ID0gdGhpcy5jb250ZXh0KSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKSxcbiAgICAgICAgY2hpbGRDb250ZXh0ID0gdGhpcy5nZXRDaGlsZENvbnRleHQoY29udGV4dCkgfHwgY29udGV4dDtcblxuICBmaXJzdENoaWxkLmFkZENoaWxkKGNoaWxkLCBjaGlsZENvbnRleHQpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVDaGlsZChjaGlsZCwgY29udGV4dCA9IHRoaXMuY29udGV4dCkge1xuICBjb25zdCBmaXJzdENoaWxkID0gZmlyc3QodGhpcy5jaGlsZHJlbiksXG4gICAgICAgIGNoaWxkQ29udGV4dCA9IHRoaXMuZ2V0Q2hpbGRDb250ZXh0KGNvbnRleHQpIHx8IGNvbnRleHQ7XG5cbiAgZmlyc3RDaGlsZC5yZW1vdmVDaGlsZChjaGlsZCwgY2hpbGRDb250ZXh0KTtcbn1cblxuZnVuY3Rpb24gc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICByZXR1cm4gZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xufVxuXG5mdW5jdGlvbiBnZXRBdHRyaWJ1dGUobmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gZmlyc3QodGhpcy5jaGlsZHJlbik7XG5cbiAgcmV0dXJuIGZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKG5hbWUpO1xufVxuXG5mdW5jdGlvbiBjbGVhckF0dHJpYnV0ZShuYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICBmaXJzdENoaWxkLmNsZWFyQXR0cmlidXRlKG5hbWUpO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpIHsgXG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICBmaXJzdENoaWxkLnNldENsYXNzYWRkQXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQXR0cmlidXRlKG5hbWUpIHsgXG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICBmaXJzdENoaWxkLnJlbW92ZUF0dHJpYnV0ZShuYW1lKVxufVxuXG5mdW5jdGlvbiBzZXRDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIGZpcnN0Q2hpbGQuc2V0Q2xhc3MoY2xhc3NOYW1lKTtcbn1cblxuZnVuY3Rpb24gYWRkQ2xhc3MoY2xhc3NOYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICBmaXJzdENoaWxkLmFkZENsYXNzKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gZmlyc3QodGhpcy5jaGlsZHJlbik7XG5cbiAgZmlyc3RDaGlsZC5yZW1vdmVDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIGZpcnN0Q2hpbGQudG9nZ2xlQ2xhc3MoY2xhc3NOYW1lKTtcbn1cblxuZnVuY3Rpb24gaGFzQ2xhc3MoY2xhc3NOYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICByZXR1cm4gZmlyc3RDaGlsZC5oYXNDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiBjbGVhckNsYXNzZXMoKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBmaXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICBmaXJzdENoaWxkLmNsZWFyQ2xhc3NlcygpO1xufVxuXG5mdW5jdGlvbiBnZXRUYWdOYW1lKCkge1xuICByZXR1cm4gbnVsbDtcbn1cblxuY29uc3QgaW5mZXJlbmNlTWl4aW4gPSB7XG4gIHNwbGljZUNoaWxkcmVuOiBzcGxpY2VDaGlsZHJlbixcbiAgYWRkQ2hpbGQ6IGFkZENoaWxkLFxuICByZW1vdmVDaGlsZDogcmVtb3ZlQ2hpbGQsXG4gIHNldEF0dHJpYnV0ZTogc2V0QXR0cmlidXRlLFxuICBnZXRBdHRyaWJ1dGU6IGdldEF0dHJpYnV0ZSxcbiAgY2xlYXJBdHRyaWJ1dGU6IGNsZWFyQXR0cmlidXRlLFxuICBhZGRBdHRyaWJ1dGU6IGFkZEF0dHJpYnV0ZSxcbiAgcmVtb3ZlQXR0cmlidXRlOiByZW1vdmVBdHRyaWJ1dGUsXG4gIHNldENsYXNzOiBzZXRDbGFzcyxcbiAgYWRkQ2xhc3M6IGFkZENsYXNzLFxuICByZW1vdmVDbGFzczogcmVtb3ZlQ2xhc3MsXG4gIHRvZ2dsZUNsYXNzOiB0b2dnbGVDbGFzcyxcbiAgaGFzQ2xhc3M6IGhhc0NsYXNzLFxuICBjbGVhckNsYXNzZXM6IGNsZWFyQ2xhc3NlcyxcbiAgZ2V0VGFnTmFtZTogZ2V0VGFnTmFtZVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbmZlcmVuY2VNaXhpbjtcblxuZnVuY3Rpb24gZmlyc3QoYXJyYXkpIHsgcmV0dXJuIGFycmF5WzBdOyB9XG4iXX0=