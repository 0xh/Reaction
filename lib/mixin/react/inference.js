'use strict';

var necessary = require('necessary');

var array = necessary.array;


function spliceChildren(start, removeCount, addedChildren) {
  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.context;

  var firstChild = array.first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.spliceChildren(start, removeCount, addedChildren, childContext);
}

function addChild(child) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;

  var firstChild = array.first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.addChild(child, childContext);
}

function removeChild(child) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;

  var firstChild = array.first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.removeChild(child, childContext);
}

function setAttribute(name, value) {
  var firstChild = array.first(this.children);

  return firstChild.setAttribute(name, value);
}

function getAttribute(name) {
  var firstChild = array.first(this.children);

  return firstChild.getAttribute(name);
}

function clearAttribute(name) {
  var firstChild = array.first(this.children);

  firstChild.clearAttribute(name);
}

function addAttribute(name, value) {
  var firstChild = array.first(this.children);

  firstChild.setClassaddAttribute(name, value);
}

function removeAttribute(name) {
  var firstChild = array.first(this.children);

  firstChild.removeAttribute(name);
}

function setClass(className) {
  var firstChild = array.first(this.children);

  firstChild.setClass(className);
}

function addClass(className) {
  var firstChild = array.first(this.children);

  firstChild.addClass(className);
}

function removeClass(className) {
  var firstChild = array.first(this.children);

  firstChild.removeClass(className);
}

function toggleClass(className) {
  var firstChild = array.first(this.children);

  firstChild.toggleClass(className);
}

function hasClass(className) {
  var firstChild = array.first(this.children);

  return firstChild.hasClass(className);
}

function clearClasses() {
  var firstChild = array.first(this.children);

  firstChild.clearClasses();
}

function getTagName() {
  return null;
}

var inferenceMixin = {
  spliceChildren: spliceChildren,
  addChild: addChild,
  removeChild: removeChild,
  setAttribute: setAttribute,
  getAttribute: getAttribute,
  clearAttribute: clearAttribute,
  addAttribute: addAttribute,
  removeAttribute: removeAttribute,
  setClass: setClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  hasClass: hasClass,
  clearClasses: clearClasses,
  getTagName: getTagName
};

module.exports = inferenceMixin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9taXhpbi9yZWFjdC9pbmZlcmVuY2UuanMiXSwibmFtZXMiOlsibmVjZXNzYXJ5IiwicmVxdWlyZSIsImFycmF5Iiwic3BsaWNlQ2hpbGRyZW4iLCJzdGFydCIsInJlbW92ZUNvdW50IiwiYWRkZWRDaGlsZHJlbiIsImNvbnRleHQiLCJmaXJzdENoaWxkIiwiZmlyc3QiLCJjaGlsZHJlbiIsImNoaWxkQ29udGV4dCIsImdldENoaWxkQ29udGV4dCIsImFkZENoaWxkIiwiY2hpbGQiLCJyZW1vdmVDaGlsZCIsInNldEF0dHJpYnV0ZSIsIm5hbWUiLCJ2YWx1ZSIsImdldEF0dHJpYnV0ZSIsImNsZWFyQXR0cmlidXRlIiwiYWRkQXR0cmlidXRlIiwic2V0Q2xhc3NhZGRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRDbGFzcyIsImNsYXNzTmFtZSIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsImhhc0NsYXNzIiwiY2xlYXJDbGFzc2VzIiwiZ2V0VGFnTmFtZSIsImluZmVyZW5jZU1peGluIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsWUFBWUMsUUFBUSxXQUFSLENBQWxCOztJQUVRQyxLLEdBQVVGLFMsQ0FBVkUsSzs7O0FBRVIsU0FBU0MsY0FBVCxDQUF3QkMsS0FBeEIsRUFBK0JDLFdBQS9CLEVBQTRDQyxhQUE1QyxFQUFtRjtBQUFBLE1BQXhCQyxPQUF3Qix1RUFBZCxLQUFLQSxPQUFTOztBQUNqRixNQUFNQyxhQUFhTixNQUFNTyxLQUFOLENBQVksS0FBS0MsUUFBakIsQ0FBbkI7QUFBQSxNQUNNQyxlQUFlLEtBQUtDLGVBQUwsQ0FBcUJMLE9BQXJCLEtBQWlDQSxPQUR0RDs7QUFHQUMsYUFBV0wsY0FBWCxDQUEwQkMsS0FBMUIsRUFBaUNDLFdBQWpDLEVBQThDQyxhQUE5QyxFQUE2REssWUFBN0Q7QUFDRDs7QUFFRCxTQUFTRSxRQUFULENBQWtC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QUFhTixNQUFNTyxLQUFOLENBQVksS0FBS0MsUUFBakIsQ0FBbkI7O0FBRUFGLGFBQVdzQixZQUFYO0FBQ0Q7O0FBRUQsU0FBU0MsVUFBVCxHQUFzQjtBQUNwQixTQUFPLElBQVA7QUFDRDs7QUFFRCxJQUFNQyxpQkFBaUI7QUFDckI3QixrQkFBZ0JBLGNBREs7QUFFckJVLFlBQVVBLFFBRlc7QUFHckJFLGVBQWFBLFdBSFE7QUFJckJDLGdCQUFjQSxZQUpPO0FBS3JCRyxnQkFBY0EsWUFMTztBQU1yQkMsa0JBQWdCQSxjQU5LO0FBT3JCQyxnQkFBY0EsWUFQTztBQVFyQkUsbUJBQWlCQSxlQVJJO0FBU3JCQyxZQUFVQSxRQVRXO0FBVXJCRSxZQUFVQSxRQVZXO0FBV3JCQyxlQUFhQSxXQVhRO0FBWXJCQyxlQUFhQSxXQVpRO0FBYXJCQyxZQUFVQSxRQWJXO0FBY3JCQyxnQkFBY0EsWUFkTztBQWVyQkMsY0FBWUE7QUFmUyxDQUF2Qjs7QUFrQkFFLE9BQU9DLE9BQVAsR0FBaUJGLGNBQWpCIiwiZmlsZSI6ImluZmVyZW5jZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbmVjZXNzYXJ5ID0gcmVxdWlyZSgnbmVjZXNzYXJ5Jyk7XG5cbmNvbnN0IHsgYXJyYXkgfSA9IG5lY2Vzc2FyeTtcblxuZnVuY3Rpb24gc3BsaWNlQ2hpbGRyZW4oc3RhcnQsIHJlbW92ZUNvdW50LCBhZGRlZENoaWxkcmVuLCBjb250ZXh0ID0gdGhpcy5jb250ZXh0KSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBhcnJheS5maXJzdCh0aGlzLmNoaWxkcmVuKSxcbiAgICAgICAgY2hpbGRDb250ZXh0ID0gdGhpcy5nZXRDaGlsZENvbnRleHQoY29udGV4dCkgfHwgY29udGV4dDtcblxuICBmaXJzdENoaWxkLnNwbGljZUNoaWxkcmVuKHN0YXJ0LCByZW1vdmVDb3VudCwgYWRkZWRDaGlsZHJlbiwgY2hpbGRDb250ZXh0KTtcbn1cblxuZnVuY3Rpb24gYWRkQ2hpbGQoY2hpbGQsIGNvbnRleHQgPSB0aGlzLmNvbnRleHQpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pLFxuICAgICAgICBjaGlsZENvbnRleHQgPSB0aGlzLmdldENoaWxkQ29udGV4dChjb250ZXh0KSB8fCBjb250ZXh0O1xuXG4gIGZpcnN0Q2hpbGQuYWRkQ2hpbGQoY2hpbGQsIGNoaWxkQ29udGV4dCk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNoaWxkKGNoaWxkLCBjb250ZXh0ID0gdGhpcy5jb250ZXh0KSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBhcnJheS5maXJzdCh0aGlzLmNoaWxkcmVuKSxcbiAgICAgICAgY2hpbGRDb250ZXh0ID0gdGhpcy5nZXRDaGlsZENvbnRleHQoY29udGV4dCkgfHwgY29udGV4dDtcblxuICBmaXJzdENoaWxkLnJlbW92ZUNoaWxkKGNoaWxkLCBjaGlsZENvbnRleHQpO1xufVxuXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIHJldHVybiBmaXJzdENoaWxkLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIGdldEF0dHJpYnV0ZShuYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBhcnJheS5maXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICByZXR1cm4gZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyQXR0cmlidXRlKG5hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIGZpcnN0Q2hpbGQuY2xlYXJBdHRyaWJ1dGUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkgeyBcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIGZpcnN0Q2hpbGQuc2V0Q2xhc3NhZGRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVBdHRyaWJ1dGUobmFtZSkgeyBcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIGZpcnN0Q2hpbGQucmVtb3ZlQXR0cmlidXRlKG5hbWUpXG59XG5cbmZ1bmN0aW9uIHNldENsYXNzKGNsYXNzTmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gYXJyYXkuZmlyc3QodGhpcy5jaGlsZHJlbik7XG5cbiAgZmlyc3RDaGlsZC5zZXRDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiBhZGRDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIGZpcnN0Q2hpbGQuYWRkQ2xhc3MoY2xhc3NOYW1lKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSBhcnJheS5maXJzdCh0aGlzLmNoaWxkcmVuKTtcblxuICBmaXJzdENoaWxkLnJlbW92ZUNsYXNzKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUNsYXNzKGNsYXNzTmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gYXJyYXkuZmlyc3QodGhpcy5jaGlsZHJlbik7XG5cbiAgZmlyc3RDaGlsZC50b2dnbGVDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiBoYXNDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIHJldHVybiBmaXJzdENoaWxkLmhhc0NsYXNzKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyQ2xhc3NlcygpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IGFycmF5LmZpcnN0KHRoaXMuY2hpbGRyZW4pO1xuXG4gIGZpcnN0Q2hpbGQuY2xlYXJDbGFzc2VzKCk7XG59XG5cbmZ1bmN0aW9uIGdldFRhZ05hbWUoKSB7XG4gIHJldHVybiBudWxsO1xufVxuXG5jb25zdCBpbmZlcmVuY2VNaXhpbiA9IHtcbiAgc3BsaWNlQ2hpbGRyZW46IHNwbGljZUNoaWxkcmVuLFxuICBhZGRDaGlsZDogYWRkQ2hpbGQsXG4gIHJlbW92ZUNoaWxkOiByZW1vdmVDaGlsZCxcbiAgc2V0QXR0cmlidXRlOiBzZXRBdHRyaWJ1dGUsXG4gIGdldEF0dHJpYnV0ZTogZ2V0QXR0cmlidXRlLFxuICBjbGVhckF0dHJpYnV0ZTogY2xlYXJBdHRyaWJ1dGUsXG4gIGFkZEF0dHJpYnV0ZTogYWRkQXR0cmlidXRlLFxuICByZW1vdmVBdHRyaWJ1dGU6IHJlbW92ZUF0dHJpYnV0ZSxcbiAgc2V0Q2xhc3M6IHNldENsYXNzLFxuICBhZGRDbGFzczogYWRkQ2xhc3MsXG4gIHJlbW92ZUNsYXNzOiByZW1vdmVDbGFzcyxcbiAgdG9nZ2xlQ2xhc3M6IHRvZ2dsZUNsYXNzLFxuICBoYXNDbGFzczogaGFzQ2xhc3MsXG4gIGNsZWFyQ2xhc3NlczogY2xlYXJDbGFzc2VzLFxuICBnZXRUYWdOYW1lOiBnZXRUYWdOYW1lXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGluZmVyZW5jZU1peGluO1xuIl19