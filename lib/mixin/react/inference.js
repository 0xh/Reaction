'use strict';

var arrayUtil = require('../../util/array');

function spliceChildren(start, removeCount, addedChildren) {
  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.context;

  var firstChild = arrayUtil.first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.spliceChildren(start, removeCount, addedChildren, childContext);
}

function addChild(child) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;

  var firstChild = arrayUtil.first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.addChild(child, childContext);
}

function removeChild(child) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;

  var firstChild = arrayUtil.first(this.children),
      childContext = this.getChildContext(context) || context;

  firstChild.removeChild(child, childContext);
}

function setAttribute(name, value) {
  var firstChild = arrayUtil.first(this.children);

  return firstChild.setAttribute(name, value);
}

function getAttribute(name) {
  var firstChild = arrayUtil.first(this.children);

  return firstChild.getAttribute(name);
}

function clearAttribute(name) {
  var firstChild = arrayUtil.first(this.children);

  firstChild.clearAttribute(name);
}

function addAttribute(name, value) {
  var firstChild = arrayUtil.first(this.children);

  firstChild.setClassaddAttribute(name, value);
}

function removeAttribute(name) {
  var firstChild = arrayUtil.first(this.children);

  firstChild.removeAttribute(name);
}

function setClass(className) {
  var firstChild = arrayUtil.first(this.children);

  firstChild.setClass(className);
}

function addClass(className) {
  var firstChild = arrayUtil.first(this.children);

  firstChild.addClass(className);
}

function removeClass(className) {
  var firstChild = arrayUtil.first(this.children);

  firstChild.removeClass(className);
}

function toggleClass(className) {
  var firstChild = arrayUtil.first(this.children);

  firstChild.toggleClass(className);
}

function hasClass(className) {
  var firstChild = arrayUtil.first(this.children);

  return firstChild.hasClass(className);
}

function clearClasses() {
  var firstChild = arrayUtil.first(this.children);

  firstChild.clearClasses();
}

function getTagName() {
  return null;
}

var inferenceMixin = {
  spliceChildren: spliceChildren,
  addChild: addChild,
  removeChild: removeChild,
  setAttribute: setAttribute,
  getAttribute: getAttribute,
  clearAttribute: clearAttribute,
  addAttribute: addAttribute,
  removeAttribute: removeAttribute,
  setClass: setClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  hasClass: hasClass,
  clearClasses: clearClasses,
  getTagName: getTagName
};

module.exports = inferenceMixin;
//# sourceMappingURL=data:application/json;base64,